const pool = require("../config/db");

const SupplierModel = {
    // üîπ L·∫•y danh s√°ch t·∫•t c·∫£ nh√† cung c·∫•p
    async getAll() {
        const [rows] = await pool.query(`
            SELECT supplier_id, name, contact_email, phone, created_at
            FROM Suppliers
            ORDER BY created_at DESC
        `);
        return rows;
    },

    // üîπ L·∫•y 1 nh√† cung c·∫•p theo ID
    async getById(id) {
        const [rows] = await pool.query(`
            SELECT supplier_id, name, contact_email, phone, created_at
            FROM Suppliers
            WHERE supplier_id = ?
        `, [id]);
        return rows[0];
    },

    // üîπ Th√™m nh√† cung c·∫•p m·ªõi
    async create({ name, contact_email, phone }) {
        const [result] = await pool.query(`
            INSERT INTO Suppliers (name, contact_email, phone)
            VALUES (?, ?, ?)
        `, [name, contact_email, phone]);
        return { supplier_id: result.insertId };
    },

    // üîπ C·∫≠p nh·∫≠t th√¥ng tin nh√† cung c·∫•p
    async update(id, { name, contact_email, phone }) {
        await pool.query(`
            UPDATE Suppliers
            SET name = ?, contact_email = ?, phone = ?
            WHERE supplier_id = ?
        `, [name, contact_email, phone, id]);
        return { message: "C·∫≠p nh·∫≠t th√†nh c√¥ng" };
    },

    // üîπ X√≥a nh√† cung c·∫•p
    async delete(id) {
        await pool.query(`
            DELETE FROM Suppliers WHERE supplier_id = ?
        `, [id]);
        return { message: "ƒê√£ x√≥a nh√† cung c·∫•p" };
    },
};

module.exports = SupplierModel;
